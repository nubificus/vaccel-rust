/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "session.proto";
import "resources.proto";
import "image.proto";
import "tensorflow.proto";

package vaccel;

service VaccelAgent {
	// Session handling
	rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
	rpc DestroySession(DestroySessionRequest) returns (VaccelEmpty);

	// vAccelRT resource handling
	rpc CreateResource(CreateResourceRequest) returns (CreateResourceResponse);
	rpc RegisterResource(RegisterResourceRequest) returns (VaccelEmpty);
	rpc UnregisterResource(UnregisterResourceRequest) returns (VaccelEmpty);
	rpc DestroyResource(DestroyResourceRequest) returns (VaccelEmpty);

	// Image Classification API
	rpc ImageClassification(ImageClassificationRequest) returns (ImageClassificationResponse);

	// TensorFlow inference API
	rpc TensorflowModelLoad(TensorflowModelLoadRequest) returns (TensorflowModelLoadResponse);
	rpc TensorflowModelUnload(TensorflowModelUnloadRequest) returns (TensorflowModelUnloadResponse);
	rpc TensorflowModelRun(TensorflowModelRunRequest) returns (TensorflowModelRunResponse);

	// Generic Operation API
	rpc Genop(GenopRequest) returns (GenopResponse); 
}

message VaccelEmpty {}
